
/*
 * Class: CMSC203 22377

 * Instructor:Professor Gary Thai
 * Project 2.
 * Description: This program receives a guess and reports if the guess is the random 
 * number that was generated.The application will narrow down the choices according 
 * to the previous guesses and continue to prompt the user to enter a guess 
 * until a correct  guess is made.  
 * The user can guess at most 7 times. 
 * The program uses the utility class RNG.java. 

 * Due: 10/01/2022
 * Platform/compiler:Eclipse
 * I pledge that I have completed the programming 
 * assignment independently. I have not copied the code 
 * from a student or any source. I have not given my code 
 * to any student.
   Print your Name here: George Ngatha
*/

/**Driver Class-RandomNumber Guesser
*This is the driver class for the RNG that contains a main method.
*/

import java.util.Scanner;   //Needed for Random Class
import java.util.Random;    //Needed for Random Class

public class RandomNumberGuesser
{
	public static void main(String[] args)
	{
		String programmerName = "George Ngatha";
		int answer;    		//To hold 'Yes' or 'No'
		String input;  		//To hold input "Yes" or "yes" or "No" or "no"
		int firstGuess; 	//To hold first guess
		int nextGuess = 0; 	//To hold next guess/subsequent guesses
		int highGuess = 100 ; 	//To hold high guess
		int lowGuess = 0 ;    	//To hold low guess
		int count =0;          //Initialize count
	    RNG.resetCount();      //Reset count method from RNG class/RNG.java
		RNG.rand(); //random1 holds the first random number
        
		    
		//Create a Scanner object for keyboard input.
		Scanner keyboard = new Scanner(System.in);
		
		//State the purpose of the program
		System.out.println("This application generates a random integer "
				+ " between  0 and 100 and asks the user\n"
				+ " to guess " + "correctly" + " until they guess correctly.\n");
			
	
		//Ask the user for an initial guess of a random number between 0 and 100.
			System.out.print("Enter your intial guess between 0 and 100: ");
			firstGuess = keyboard.nextInt();
			
			
			//Printout the result for that guess using the methods from the RNG class
			System.out.println("The random number generated is: " + RNG.rand());
			

			//Allow the user to give another guess between the previous low and 
			//high guesses
			//nextGuess should be between lowGuess and highGuess
			
			//Call RNG.resetCount() method from RNG.java
			//to facilitate looping through user entries
			for (RNG.resetCount(); RNG.getCount()<7; count++)
			{	
			System.out.print("Enter your next guess : ");
		    nextGuess= keyboard.nextInt();
		    
		    
		  //Display number generated by RNG.random() to verify program works
		    //And see values generated by method call
			System.out.println("The random number generated is: " + RNG.rand());
			
		    //Display no of counts to validate RNG.getCount() method call works
		   System.out.println("This is count: " + RNG.getCount());
		    
		   
			//Use RNG.inputValidation() method to validate guesses entered
		   //are an integer between the previous low guess and high guess
		 while(RNG.inputValidation(lowGuess, nextGuess, highGuess));
		  {
			    
			//Display the number of guesses after each guess
			System.out.println("This is guess No: "  + RNG.getCount() );
		  
	    	//If the user guesses correctly, ask the user if they want to try
		   //another round
	    	 if(nextGuess==RNG.rand())
	    	 {
	    		 System.out.println("Congratulations!Your guess is correct");
	    		 System.out.println("Do you want to Try again?(1-Yes or 2-No?)");
	    		answer=keyboard.nextInt();
	    	 
	    		//If the user wants to keep playing, allow for input
					if(answer!=2)
					{
					System.out.println("Enter your next guess : ");
					nextGuess= keyboard.nextInt();
					}
					
					//If the user is done, print completion message
					else
					{
						System.out.println("Thank you for playing");
						System.out.println("Programmer Name: " + programmerName);
						 break;
					}
	    	 
	    	 //Terminate the program if user has reached 7 guesses
		 if(RNG.getCount()==7)
		 {
			 System.out.print("You have exceeded the maximum number" +
		 		" of guesses 7, try again");
			 break;
		  }
		 }
			}
		  }		
}
}




	
	

	

			
	

